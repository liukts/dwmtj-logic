// flags
notch_flag := 0
unotch_only := 0
edge_rough := 0
preload_geom := 0
SnapshotFormat = "png"
Temp = 0
ThermSeed(0)
random_seed := 0
// geometry
sizeX := 320e-9
sizeY := 15e-9
sizeZ := 3e-9
hm_sizeZ := sizeZ
fm_cross_sec := sizeY * sizeZ
hm_cross_sec := sizeY * hm_sizeZ
notch_diam := 8e-9
rough_diam := 1e-9
notch_space_L := 50e-9

// length spec for trapezoid
w1 := sizeY
w2 := sizeY
angle := Asin(0.5 * (w2 - w1) / sizeX)
notch_space := notch_space_L / cos(angle)

Nx := 320
Ny := 15

magAn := 7e5

setgridsize(Nx, Ny, 1)
setcellsize(sizeX/Nx, sizeY/Ny, sizeZ)
if preload_geom == 1 {
	setGeom(imageShape("STTPMA_rough.png"))
} else {
	if edge_rough == 1 { // construct channel from variable position rectangles
		maxrect := sizeX / rough_diam
		xcenter := -0.5 * (sizeX - rough_diam)
		xheight := (xcenter+(0.5*sizeX))*((w2-w1)/sizeX) + w1
		baserect := rect(rough_diam, w1+(0.5*rough_diam*randNorm())).transl(xcenter, 0.5*rough_diam*randNorm(), 0)
		for i := 1; i < maxrect; i++ {
			randSeed(random_seed)
			random_seed += 1
			xcenter = xcenter + rough_diam
			xheight = (xcenter+(0.5*sizeX))*((w2-w1)/sizeX) + w1
			baserect = baserect.add(rect(rough_diam, xheight+(0.5*rough_diam*randNorm())).transl(xcenter, 0.5*rough_diam*randNorm(), 0))
		}
		if notch_flag == 1 {
			notch := circle(notch_diam).repeat(25e-9, 0, 0)
			unotch := notch.transl(0, 0.25*(w1+w2), 0).rotz(angle)
			lnotch := notch.transl(0, -0.25*(w1+w2), 0).rotz(-angle)
			setGeom(baserect.sub(unotch).sub(lnotch))
			saveAs(geom, "SOTPMA_rough_notch")
		} else {
			setGeom(baserect)
			saveAs(geom, "SOTPMA_rough")
		}
	} else {
		uhrect := rect(2*sizeX, sizeY).sub(rect(2*sizeX, 0.5*sizeY).transl(0, -0.25*sizeY, 0))
		utilt := uhrect.transl(0, 0.25*(w1+w2), 0).rotz(angle)
		lhrect := rect(2*sizeX, sizeY).sub(rect(2*sizeX, 0.5*sizeY).transl(0, 0.25*sizeY, 0))
		ltilt := lhrect.transl(0, -0.25*(w1+w2), 0).rotz(-angle)
		baserect := rect(sizeX, sizeY).sub(utilt).sub(ltilt)
		if notch_flag == 1 {
			notch := circle(notch_diam).repeat(notch_space, 0, 0).transl(0.5*notch_space_L, 0, 0)
			if unotch_only == 1 {
				unotch := notch.transl(0, 0.25*(w1+w2), 0).rotz(angle)
				setGeom(baserect.sub(unotch))
				saveAs(geom, "STTPMA_smooth_notch")
			} else if unotch_only == -1 {
				lnotch := notch.transl(0, -0.25*(w1+w2), 0).rotz(-angle)
				setGeom(baserect.sub(lnotch))
				saveAs(geom, "STTPMA_smooth_notch")
			} else {
				unotch := notch.transl(0, 0.25*(w1+w2), 0).rotz(angle)
				lnotch := notch.transl(0, -0.25*(w1+w2), 0).rotz(-angle)
				setGeom(baserect.sub(unotch).sub(lnotch))
				saveAs(geom, "STTPMA_smooth_notch")
			}

		} else {
			setGeom(baserect)
			saveAs(geom, "SOTPMA_smooth")
		}
	}
}
fixed_w := 5e-9
grainSize := 1e-9
randomSeed := 0
maxRegion := 253
regionWidth := (sizeX - 2*fixed_w) / maxRegion
randK := 0.0125 // 0.2 results in 15.8 degree maximum deflection, 0.23 --> 18 degrees
varK := 0.025
offsetDistance := 25e-9
oxideWidth := 15e-9
/* This is the Block that will split up the DW into the equation */
/* VCMA */
for i := 0; i <= maxRegion; i++ {
	xLoc := (i * regionWidth) - (0.5 * sizeX) + fixed_w
	defregion(i, rect(regionWidth, sizeY).transl(xLoc + regionWidth/2, 0, 0))
	midpoint := xLoc + regionWidth/2

	if (midpoint) >= (-(offsetDistance + oxideWidth)) && (midpoint) <= (-(offsetDistance)) {
		Ku1.setRegion(i, magAn)
	} else if (midpoint) >= (offsetDistance) && (midpoint) <= (offsetDistance + oxideWidth) {
		Ku1.setRegion(i, magAn)
	} else {
		Ku1.setRegion(i, 5e5)
	}
}
defregion(254, rect(fixed_w, sizeY).transl(-((0.5*sizeX)-(0.5*fixed_w)), 0, 0))
defregion(255, rect(fixed_w, sizeY).transl(((0.5*sizeX)-(0.5*fixed_w)), 0, 0))
startpos := 50e-9
m = TwoDomain(0, 0, 1, 1, 0, 0, 0, 0, -1).transl(-(0.5*sizeX) + startpos + fixed_w, 0, 0)
m.setRegion(254, uniform(0, 0, 1))
m.setRegion(255, uniform(0, 0, -1))
frozenspins.setRegion(254, 254)
frozenspins.setRegion(255, 255)
EdgeSmooth = 8

// material params
Ms := 800e3
Msat = Ms
Aex = 1.3e-11
al := 0.05
alpha = al
// Ku1 = 5e5
AnisU = vector(0, 0, 1)
dmi := -0.5e-3
Dind = dmi

// STT
Xi = 0.05
stt_P := 0.7
// SHE
sot_P := 0.2
scale2hm := sot_P / stt_P
pol = sot_P
// Rashba
u_B := 9.274e-24
alpha_R := 2e-30

// spacer layer
lambda = 1
epsilonprime = 0
fixedlayer = vector(0, -1, 0)

// current
I_pulse := -8e-6
I := I_pulse
fm2hm := 0.5 // fraction current through fm
j_fm := 0.0
j_hm := 0.0

// relax magnetization
relax()

// add center magnetization to output & run
mx_mid := cropY(m.Comp(2), floor(Ny/2), floor(Ny/2+1))
tableAdd(mx_mid)
tableAddVar(I, "I_x", "A")
tableautosave(10e-12)
tau_RE := 0.00000

dt_step := 0.05e-09
/*
j_x0 = 1.0e10
J = vector(0, 0, j_x0)
tau_RE := (alpha_R * (j_x0 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x1 = 1.0e10
J = vector(0, 0, j_x1)
tau_RE = (alpha_R * (j_x1 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x2 = 1.0e10
J = vector(0, 0, j_x2)
tau_RE = (alpha_R * (j_x2 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x3 = 1.0e10
J = vector(0, 0, j_x3)
tau_RE = (alpha_R * (j_x3 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x4 = 1.0e10
J = vector(0, 0, j_x4)
tau_RE = (alpha_R * (j_x4 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x5 = 1.0e10
J = vector(0, 0, j_x5)
tau_RE = (alpha_R * (j_x5 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x6 = 1.0e10
J = vector(0, 0, j_x6)
tau_RE = (alpha_R * (j_x6 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x7 = 1.0e10
J = vector(0, 0, j_x7)
tau_RE = (alpha_R * (j_x7 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x8 = 1.0e10
J = vector(0, 0, j_x8)
tau_RE = (alpha_R * (j_x8 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x9 = 1.0e10
J = vector(0, 0, j_x9)
tau_RE = (alpha_R * (j_x9 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)

j_x10 = 1.0e10
J = vector(0, 0, j_x10)
tau_RE = (alpha_R * (j_x10 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x11 = 1.0e10
J = vector(0, 0, j_x11)
tau_RE = (alpha_R * (j_x11 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x12 = 1.0e10
J = vector(0, 0, j_x12)
tau_RE = (alpha_R * (j_x12 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x13 = 1.0e10
J = vector(0, 0, j_x13)
tau_RE = (alpha_R * (j_x13 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x14 = 1.0e10
J = vector(0, 0, j_x14)
tau_RE = (alpha_R * (j_x14 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x15 = 1.0e10
J = vector(0, 0, j_x15)
tau_RE = (alpha_R * (j_x15 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x16 = 1.0e10
J = vector(0, 0, j_x16)
tau_RE = (alpha_R * (j_x16 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x17 = 1.0e10
J = vector(0, 0, j_x17)
tau_RE = (alpha_R * (j_x17 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x18 = 1.0e10
J = vector(0, 0, j_x18)
tau_RE = (alpha_R * (j_x18 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x19 = 1.0e10
J = vector(0, 0, j_x19)
tau_RE = (alpha_R * (j_x19 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)

j_x20 = 1.0e10
J = vector(0, 0, j_x20)
tau_RE = (alpha_R * (j_x20 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x21 = 1.0e10
J = vector(0, 0, j_x21)
tau_RE = (alpha_R * (j_x21 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x22 = 1.0e10
J = vector(0, 0, j_x22)
tau_RE = (alpha_R * (j_x22 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x23 = 1.0e10
J = vector(0, 0, j_x23)
tau_RE = (alpha_R * (j_x23 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x24 = 1.0e10
J = vector(0, 0, j_x24)
tau_RE = (alpha_R * (j_x24 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x25 = 1.0e10
J = vector(0, 0, j_x25)
tau_RE = (alpha_R * (j_x25 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x26 = 1.0e10
J = vector(0, 0, j_x26)
tau_RE = (alpha_R * (j_x26 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x27 = 1.0e10
J = vector(0, 0, j_x27)
tau_RE = (alpha_R * (j_x27 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x28 = 1.0e10
J = vector(0, 0, j_x28)
tau_RE = (alpha_R * (j_x28 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x29 = 1.0e10
J = vector(0, 0, j_x29)
tau_RE = (alpha_R * (j_x29 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)

j_x30 = 1.0e10
J = vector(0, 0, j_x30)
tau_RE = (alpha_R * (j_x30 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x31 = 1.0e10
J = vector(0, 0, j_x31)
tau_RE = (alpha_R * (j_x31 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x32 = 1.0e10
J = vector(0, 0, j_x32)
tau_RE = (alpha_R * (j_x32 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x33 = 1.0e10
J = vector(0, 0, j_x33)
tau_RE = (alpha_R * (j_x33 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x34 = 1.0e10
J = vector(0, 0, j_x34)
tau_RE = (alpha_R * (j_x34 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x35 = 1.0e10
J = vector(0, 0, j_x35)
tau_RE = (alpha_R * (j_x35 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x36 = 1.0e10
J = vector(0, 0, j_x36)
tau_RE = (alpha_R * (j_x36 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x37 = 1.0e10
J = vector(0, 0, j_x37)
tau_RE = (alpha_R * (j_x37 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x38 = 1.0e10
J = vector(0, 0, j_x38)
tau_RE = (alpha_R * (j_x38 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x39 = 1.0e10
J = vector(0, 0, j_x39)
tau_RE = (alpha_R * (j_x39 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)

j_x40 = 1.0e10
J = vector(0, 0, j_x40)
tau_RE = (alpha_R * (j_x40 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x41 = 1.0e10
J = vector(0, 0, j_x41)
tau_RE = (alpha_R * (j_x41 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x42 = 1.0e10
J = vector(0, 0, j_x42)
tau_RE = (alpha_R * (j_x42 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x43 = 1.0e10
J = vector(0, 0, j_x43)
tau_RE = (alpha_R * (j_x43 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x44 = 1.0e10
J = vector(0, 0, j_x44)
tau_RE = (alpha_R * (j_x44 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x45 = 1.0e10
J = vector(0, 0, j_x45)
tau_RE = (alpha_R * (j_x45 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x46 = 1.0e10
J = vector(0, 0, j_x46)
tau_RE = (alpha_R * (j_x46 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x47 = 1.0e10
J = vector(0, 0, j_x47)
tau_RE = (alpha_R * (j_x47 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x48 = 1.0e10
J = vector(0, 0, j_x48)
tau_RE = (alpha_R * (j_x48 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x49 = 1.0e10
J = vector(0, 0, j_x49)
tau_RE = (alpha_R * (j_x49 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)

j_x50 = 1.0e10
J = vector(0, 0, j_x50)
tau_RE = (alpha_R * (j_x50 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x51 = 1.0e10
J = vector(0, 0, j_x51)
tau_RE = (alpha_R * (j_x51 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x52 = 1.0e10
J = vector(0, 0, j_x52)
tau_RE = (alpha_R * (j_x52 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x53 = 1.0e10
J = vector(0, 0, j_x53)
tau_RE = (alpha_R * (j_x53 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x54 = 1.0e10
J = vector(0, 0, j_x54)
tau_RE = (alpha_R * (j_x54 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x55 = 1.0e10
J = vector(0, 0, j_x55)
tau_RE = (alpha_R * (j_x55 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x56 = 1.0e10
J = vector(0, 0, j_x56)
tau_RE = (alpha_R * (j_x56 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x57 = 1.0e10
J = vector(0, 0, j_x57)
tau_RE = (alpha_R * (j_x57 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x58 = 1.0e10
J = vector(0, 0, j_x58)
tau_RE = (alpha_R * (j_x58 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x59 = 1.0e10
J = vector(0, 0, j_x59)
tau_RE = (alpha_R * (j_x59 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)

j_x60 = 1.0e10
J = vector(0, 0, j_x60)
tau_RE = (alpha_R * (j_x60 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x61 = 1.0e10
J = vector(0, 0, j_x61)
tau_RE = (alpha_R * (j_x61 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x62 = 1.0e10
J = vector(0, 0, j_x62)
tau_RE = (alpha_R * (j_x62 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x63 = 1.0e10
J = vector(0, 0, j_x63)
tau_RE = (alpha_R * (j_x63 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x64 = 1.0e10
J = vector(0, 0, j_x64)
tau_RE = (alpha_R * (j_x64 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x65 = 1.0e10
J = vector(0, 0, j_x65)
tau_RE = (alpha_R * (j_x65 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x66 = 1.0e10
J = vector(0, 0, j_x66)
tau_RE = (alpha_R * (j_x66 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x67 = 1.0e10
J = vector(0, 0, j_x67)
tau_RE = (alpha_R * (j_x67 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x68 = 1.0e10
J = vector(0, 0, j_x68)
tau_RE = (alpha_R * (j_x68 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x69 = 1.0e10
J = vector(0, 0, j_x69)
tau_RE = (alpha_R * (j_x69 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)

j_x70 = 1.0e10
J = vector(0, 0, j_x70)
tau_RE = (alpha_R * (j_x70 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x71 = 1.0e10
J = vector(0, 0, j_x71)
tau_RE = (alpha_R * (j_x71 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x72 = 1.0e10
J = vector(0, 0, j_x72)
tau_RE = (alpha_R * (j_x72 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x73 = 1.0e10
J = vector(0, 0, j_x73)
tau_RE = (alpha_R * (j_x73 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x74 = 1.0e10
J = vector(0, 0, j_x74)
tau_RE = (alpha_R * (j_x74 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x75 = 1.0e10
J = vector(0, 0, j_x75)
tau_RE = (alpha_R * (j_x75 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x76 = 1.0e10
J = vector(0, 0, j_x76)
tau_RE = (alpha_R * (j_x76 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x77 = 1.0e10
J = vector(0, 0, j_x77)
tau_RE = (alpha_R * (j_x77 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x78 = 1.0e10
J = vector(0, 0, j_x78)
tau_RE = (alpha_R * (j_x78 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x79 = 1.0e10
J = vector(0, 0, j_x79)
tau_RE = (alpha_R * (j_x79 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)

j_x80 = 1.0e10
J = vector(0, 0, j_x80)
tau_RE = (alpha_R * (j_x80 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x81 = 1.0e10
J = vector(0, 0, j_x81)
tau_RE = (alpha_R * (j_x81 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x82 = 1.0e10
J = vector(0, 0, j_x82)
tau_RE = (alpha_R * (j_x82 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x83 = 1.0e10
J = vector(0, 0, j_x83)
tau_RE = (alpha_R * (j_x83 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x84 = 1.0e10
J = vector(0, 0, j_x84)
tau_RE = (alpha_R * (j_x84 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x85 = 1.0e10
J = vector(0, 0, j_x85)
tau_RE = (alpha_R * (j_x85 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x86 = 1.0e10
J = vector(0, 0, j_x86)
tau_RE = (alpha_R * (j_x86 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x87 = 1.0e10
J = vector(0, 0, j_x87)
tau_RE = (alpha_R * (j_x87 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x88 = 1.0e10
J = vector(0, 0, j_x88)
tau_RE = (alpha_R * (j_x88 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x89 = 1.0e10
J = vector(0, 0, j_x89)
tau_RE = (alpha_R * (j_x89 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)

j_x90 = 1.0e10
J = vector(0, 0, j_x90)
tau_RE = (alpha_R * (j_x90 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x91 = 1.0e10
J = vector(0, 0, j_x91)
tau_RE = (alpha_R * (j_x91 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x92 = 1.0e10
J = vector(0, 0, j_x92)
tau_RE = (alpha_R * (j_x92 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x93 = 1.0e10
J = vector(0, 0, j_x93)
tau_RE = (alpha_R * (j_x93 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x94 = 1.0e10
J = vector(0, 0, j_x94)
tau_RE = (alpha_R * (j_x94 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x95 = 1.0e10
J = vector(0, 0, j_x95)
tau_RE = (alpha_R * (j_x95 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x96 = 1.0e10
J = vector(0, 0, j_x96)
tau_RE = (alpha_R * (j_x96 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x97 = 1.0e10
J = vector(0, 0, j_x97)
tau_RE = (alpha_R * (j_x97 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x98 = 1.0e10
J = vector(0, 0, j_x98)
tau_RE = (alpha_R * (j_x98 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x99 = 1.0e10
J = vector(0, 0, j_x99)
tau_RE = (alpha_R * (j_x99 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)

j_x100 = 1.0e10
J = vector(0, 0, j_x100)
tau_RE = (alpha_R * (j_x100 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x101 = 1.0e10
J = vector(0, 0, j_x101)
tau_RE = (alpha_R * (j_x101 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x102 = 1.0e10
J = vector(0, 0, j_x102)
tau_RE = (alpha_R * (j_x102 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x103 = 1.0e10
J = vector(0, 0, j_x103)
tau_RE = (alpha_R * (j_x103 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x104 = 1.0e10
J = vector(0, 0, j_x104)
tau_RE = (alpha_R * (j_x104 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x105 = 1.0e10
J = vector(0, 0, j_x105)
tau_RE = (alpha_R * (j_x105 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x106 = 1.0e10
J = vector(0, 0, j_x106)
tau_RE = (alpha_R * (j_x106 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x107 = 1.0e10
J = vector(0, 0, j_x107)
tau_RE = (alpha_R * (j_x107 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x108 = 1.0e10
J = vector(0, 0, j_x108)
tau_RE = (alpha_R * (j_x108 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x109 = 1.0e10
J = vector(0, 0, j_x109)
tau_RE = (alpha_R * (j_x109 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)

j_x110 = 1.0e10
J = vector(0, 0, j_x110)
tau_RE = (alpha_R * (j_x110 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x111 = 1.0e10
J = vector(0, 0, j_x111)
tau_RE = (alpha_R * (j_x111 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x112 = 1.0e10
J = vector(0, 0, j_x112)
tau_RE = (alpha_R * (j_x112 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x113 = 1.0e10
J = vector(0, 0, j_x113)
tau_RE = (alpha_R * (j_x113 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x114 = 1.0e10
J = vector(0, 0, j_x114)
tau_RE = (alpha_R * (j_x114 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x115 = 1.0e10
J = vector(0, 0, j_x115)
tau_RE = (alpha_R * (j_x115 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x116 = 1.0e10
J = vector(0, 0, j_x116)
tau_RE = (alpha_R * (j_x116 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x117 = 1.0e10
J = vector(0, 0, j_x117)
tau_RE = (alpha_R * (j_x117 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x118 = 1.0e10
J = vector(0, 0, j_x118)
tau_RE = (alpha_R * (j_x118 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x119 = 1.0e10
J = vector(0, 0, j_x119)
tau_RE = (alpha_R * (j_x119 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)

j_x120 = 1.0e10
J = vector(0, 0, j_x120)
tau_RE = (alpha_R * (j_x120 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x121 = 1.0e10
J = vector(0, 0, j_x121)
tau_RE = (alpha_R * (j_x121 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x122 = 1.0e10
J = vector(0, 0, j_x122)
tau_RE = (alpha_R * (j_x122 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x123 = 1.0e10
J = vector(0, 0, j_x123)
tau_RE = (alpha_R * (j_x123 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x124 = 1.0e10
J = vector(0, 0, j_x124)
tau_RE = (alpha_R * (j_x124 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x125 = 1.0e10
J = vector(0, 0, j_x125)
tau_RE = (alpha_R * (j_x125 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x126 = 1.0e10
J = vector(0, 0, j_x126)
tau_RE = (alpha_R * (j_x126 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x127 = 1.0e10
J = vector(0, 0, j_x127)
tau_RE = (alpha_R * (j_x127 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x128 = 1.0e10
J = vector(0, 0, j_x128)
tau_RE = (alpha_R * (j_x128 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x129 = 1.0e10
J = vector(0, 0, j_x129)
tau_RE = (alpha_R * (j_x129 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)

j_x130 = 1.0e10
J = vector(0, 0, j_x130)
tau_RE = (alpha_R * (j_x130 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x131 = 1.0e10
J = vector(0, 0, j_x131)
tau_RE = (alpha_R * (j_x131 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x132 = 1.0e10
J = vector(0, 0, j_x132)
tau_RE = (alpha_R * (j_x132 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x133 = 1.0e10
J = vector(0, 0, j_x133)
tau_RE = (alpha_R * (j_x133 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x134 = 1.0e10
J = vector(0, 0, j_x134)
tau_RE = (alpha_R * (j_x134 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x135 = 1.0e10
J = vector(0, 0, j_x135)
tau_RE = (alpha_R * (j_x135 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x136 = 1.0e10
J = vector(0, 0, j_x136)
tau_RE = (alpha_R * (j_x136 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x137 = 1.0e10
J = vector(0, 0, j_x137)
tau_RE = (alpha_R * (j_x137 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x138 = 1.0e10
J = vector(0, 0, j_x138)
tau_RE = (alpha_R * (j_x138 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x139 = 1.0e10
J = vector(0, 0, j_x139)
tau_RE = (alpha_R * (j_x139 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)

j_x140 = 1.0e10
J = vector(0, 0, j_x140)
tau_RE = (alpha_R * (j_x140 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x141 = 1.0e10
J = vector(0, 0, j_x141)
tau_RE = (alpha_R * (j_x141 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x142 = 1.0e10
J = vector(0, 0, j_x142)
tau_RE = (alpha_R * (j_x142 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x143 = 1.0e10
J = vector(0, 0, j_x143)
tau_RE = (alpha_R * (j_x143 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x144 = 1.0e10
J = vector(0, 0, j_x144)
tau_RE = (alpha_R * (j_x144 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x145 = 1.0e10
J = vector(0, 0, j_x145)
tau_RE = (alpha_R * (j_x145 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x146 = 1.0e10
J = vector(0, 0, j_x146)
tau_RE = (alpha_R * (j_x146 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x147 = 1.0e10
J = vector(0, 0, j_x147)
tau_RE = (alpha_R * (j_x147 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x148 = 1.0e10
J = vector(0, 0, j_x148)
tau_RE = (alpha_R * (j_x148 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x149 = 1.0e10
J = vector(0, 0, j_x149)
tau_RE = (alpha_R * (j_x149 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)

j_x150 = 1.0e10
J = vector(0, 0, j_x150)
tau_RE = (alpha_R * (j_x150 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x151 = 1.0e10
J = vector(0, 0, j_x151)
tau_RE = (alpha_R * (j_x151 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x152 = 1.0e10
J = vector(0, 0, j_x152)
tau_RE = (alpha_R * (j_x152 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x153 = 1.0e10
J = vector(0, 0, j_x153)
tau_RE = (alpha_R * (j_x153 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x154 = 1.0e10
J = vector(0, 0, j_x154)
tau_RE = (alpha_R * (j_x154 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x155 = 1.0e10
J = vector(0, 0, j_x155)
tau_RE = (alpha_R * (j_x155 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x156 = 1.0e10
J = vector(0, 0, j_x156)
tau_RE = (alpha_R * (j_x156 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x157 = 1.0e10
J = vector(0, 0, j_x157)
tau_RE = (alpha_R * (j_x157 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x158 = 1.0e10
J = vector(0, 0, j_x158)
tau_RE = (alpha_R * (j_x158 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)
j_x159 = 1.0e10
J = vector(0, 0, j_x159)
tau_RE = (alpha_R * (j_x159 / 2) * stt_P) / (u_B * Ms)
B_ext = vector(0, tau_RE, 0)
run(dt_step)*/